name: Pipeline_build_test_python 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:  

env:
  DIRECTORY_REPORT: report
  REPORT_FILE_FLAKE8: flake8.txt

permissions:
  contents: read

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    # https://github.com/actions/checkout
    - name: Init Checkout
      uses: actions/checkout@v4

    # https://github.com/actions/setup-python
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
        cache-dependency-path: |
            requirements/**.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements/base.txt ]; then pip install -r requirements/base.txt; fi

    - name: Lint with flake8
      run: |
        pip install flake8
        mkdir $DIRECTORY_REPORT
        flake8 --format=pylint --output-file=report/$REPORT_FILE_FLAKE8 ./
      continue-on-error: true #  keep the workflow from failing if the linting step doesn't succeed

    # https://github.com/actions/upload-artifact
    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      with:
        name: report
        path: report

    - name: Running Tests
      run: |
        pip install pytest
        pytest ./article/tests.py

  sonar:
    needs: build_and_test
    name: sonar
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # https://github.com/actions/download-artifact
      - uses: actions/download-artifact@v4
        with:
          name: report
          path: .
            
       # https://github.com/SonarSource/sonarcloud-github-action
      - name: Sonar Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:  
          args: >
            -Dsonar.python.flake8.reportPaths=flake8.txt
