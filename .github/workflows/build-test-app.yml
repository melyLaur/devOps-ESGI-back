name: Pipeline_build_test_python

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    # https://github.com/actions/checkout
    - name: Init Checkout
      uses: actions/checkout@v4

    # https://github.com/actions/setup-python
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
        cache-dependency-path: |
            requirements/**.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements/base.txt ]; then pip install -r requirements/base.txt; fi

    # stop the build if there are Python syntax errors or undefined names
    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    - name: Lint
      run: |
        pip install flake8 ruff
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        ruff --output-format=github .

    - name: Running Tests
      run: |
        pip install pytest
        pytest ./article/tests.py

  sonar:
    needs: build_and_test
    name: Sonar
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Sonar Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}